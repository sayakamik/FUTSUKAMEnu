<div class="container">
  <div class="row">
    <div class="col-md-11">
      <% if @recipe.errors.any? %>
        <%= @recipe.errors.count %>件のエラーが発生しました
        <ul>
          <% @recipe.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      <% end %>
      <div class="row">
        <h2 class="title"><b>レシピを投稿しよう</b></h2>
      </div>

      <%= form_with model: @recipe, local:true do |f| %>
        <div class="form-group row">
          <div class="col-md-3">
         　　 <%= image_tag 'no_image.jpg', alt: 'Image', class: "img-fluid", width: 300, height: 'auto' %>
         　　 <%= f.file_field :menu_image, accept: 'image/*', size: 30 %>
          </div>

          <div class="col-md-9 col-sm-12">
            <!--レシピ名、説明文-->
            <div class="cooking-title"><b>レシピについて</b></div>
              <%= f.text_field :name, autofocus: true, placeholder: "メニュー名(50文字以内)" , class: "form-control" %>&ensp;
              <%= f.text_area :description, placeholder: "説明、メッセージ(100字以内)", class: "form-control" %>

            <!--1日目メニュー入力、投稿（Javascript、一部modelに記載)-->
            <div class="cooking-title"><b>アレンジ前1日目メニュー</b><br>＊保存後は変更できません。注意して登録して下さい。</div>
              <%= f.text_field :original_menu_name, autofocus: true, placeholder: "1日目メニュー(15文字以内)＊一度保存すると変更不可。",
                  id: "originalMenuField",
                  class: "form-control",
                  data: {
                    json: @original_menus_json
                  } %>
            <div id="originalMenuList"></div>
            <%= f.hidden_field :original_menu_id, id: "originalMenuId", value: @recipe.original_menu_id %>

           <!--1日目メニュー登録について-->
            <script>
              document.addEventListener('turbolinks:load', function() {
                //きっかけがkeyup（指を離した）時に,以降コードを実行(すべての情報がe（引数）に入る
                $("#originalMenuField").on("keyup", (e) => {
                  // 変更できない変数:const JSON.perseでHTML文字情報をJSコードに変換(""がタグコードになったりするため)
                  // .target:HTML部分を取得 dataset:dataタグ json:dataタグの右側（任意で命名）
                  const data = JSON.parse(e.target.dataset.json)
                  // HTMLの値（文字情報）を取得
                  const target = e.target.value
                  // 上記の情報で、条件が当てはまるものを選択(ruby:select)して表示
                  const result = data.filter((o) =>
                    o.name.includes(target) && target.length > 0
                  )
                  // $はjqueryのオブジェクト
                  const originalMenuList = $("#originalMenuList")
                  // 下層のタグを消す（JSは元の状態を記憶しておらず、引っ張った情報は自動で消えないため中の要素だけ空にする）
                  originalMenuList.empty()
                  // 配列に対しruby:eachで引数o
                  result.forEach((o) => {
                    // データを下に追加する``で改行、埋め込みが使用可能
                    const appendData = originalMenuList.append(`
                     <div class="badge badge-secondary" data-id=${o.id}>${o.name}</div>
                    `)
                    // JSは上書き更新できないため、過去の同じタグのeventをOFFにする（今回の場合は上記の）
                    appendData.off();
                    // appendDataにclickイベント追加
                    appendData.on("click", (e) => {
                      // タグ内の文字を取得
                      const name = e.target.innerHTML
                      // データからidを取得
                      const id = e.target.dataset.id
                      // 候補から選ばれた名前、idをフォームに入れる（idはhiddenfield)
                      $("#originalMenuField").val(name)
                      $("#originalMenuId").val(id)
                      // 選んだら必要ないので削除
                      originalMenuList.empty()
                    })
                  })
                })
              });
            </script>

            <!--タグ-->
            <div class="form-group">
              <div class="cooking-title"><b>関連タグ(カンマ『,』で複数個登録できます)</b></div>
                <section class="tag">
                  <%= f.text_field :tag_name, placeholder: "タグ", class: 'form-control book_tag_name' %>
                </section>
            </div>
          </div>
        </div>

      <!--材料フォーム、手順フォーム（Javascript)-->
      <%= render 'ingredient_procedure',s: f %>

      <div class="row mt-4 pb-5">
        <div class="form-inline mx-auto">
            <%= f.submit 'レシピを公開', :name => 'post', class: 'mr-5 btn btn-light custom-light' %>
            <%= f.submit '下書きに保存', :name => 'draft', class: 'ml-5 btn btn-light custom-lightblue' %>
        </div>
      </div>
      <% end %>
    </div>
  </div>
</div>

